Ansible Hands-On 1
Based on this video - https://youtu.be/Ops94dNqZ-0

———————————————————————————————————————————————————————————————————————————————————————

1. Setup Ansible Controller Machine
2. Setup SSH on Controller Machine
3. Setup Ansible Host Machines
4. Test connection between Controller and Hosts
5. Create Hosts and Playbook file on Controller Machine
6. Run playbook file on Controller Machine

———————————————————————————————————————————————————————————————————————————————————————

Note:
We will need Linux machines for this DEMO
You can use any Linux machines or setup using any cloud platforms like AWS
In this Demo I am going to use Vagrant to create Linux Virtual Machines
In any case the process and steps will remain same

———————————————————————————————————————————————————————————————————————————————————————

Part A - Setup Ansible Controller Machine

	1 - Create directory: ansible-controller

	2 - Initialize Vagrant VM: vagrant init ubuntu/focal64
	Note: This would add ( config.vm.box = "ubuntu/focal64" ) in vagrant file

	3 - Update Vagrant file to set up ansible-controller VM

Vagrant.configure("2") do |config|

  config.vm.define "ansible-controller" do |controller|
    controller.vm.hostname = "controller"
    controller.vm.network "private_network", ip: "192.168.10.10"
    controller.vm.box = "ubuntu/focal64"
    
    controller.vm.provision "shell", inline: <<-SHELL
      sudo apt update -y
      sudo add-apt-repository --yes --update ppa:ansible/ansible
      sudo apt install ansible -y
	  sudo apt update -y
    SHELL
  end

end

	4 - Start VM: vagrant up
	5 - SSH VM: vagrant ssh
	6 - Check ansible version: ansible --version

———————————————————————————————————————————————————————————————————————————————————————

Part B - Setup SSH on Controller Machine

	1 - Generate ssh keys on ansible-controller: ssh-keygen

	2 - Copy public ssh key to shared folder
	cp /home/vagrant/.ssh/id_rsa.pub /vagrant

	3 - Copy public ssh key to host folder
	copy id_rsa.pub /ansible-hosts

———————————————————————————————————————————————————————————————————————————————————————

Part C - Setup Ansible Host Machines

	1 - Create dir: mkdir ansible-hosts

	2 - Initialize Vagrant VMs: vagrant init ubuntu/focal64
	 Note: This would add ( config.vm.box = "ubuntu/focal64" ) in vagrant file

	3 - Update Vagrant file to set up two VMs for ansible-hosts:

Vagrant.configure("2") do |config|

  # No need to add this if initiated like this: vagrant init ubuntu/focal64
  config.vm.box = "ubuntu/focal64"

  config.vm.define "web" do |web|
  web.vm.hostname = "web"
  web.vm.network "private_network", ip: "192.168.10.20"
  end

  config.vm.define "db" do |db|
  db.vm.hostname = "db"
  db.vm.network "private_network", ip: "192.168.10.30"
  end

  # Read the SSH public key from the file
  public_key_path = File.expand_path("id_rsa.pub", File.dirname(__FILE__))
  public_key = File.read(public_key_path).strip

  # Apply the provision script to all VMs
  config.vm.provision "shell", inline: <<-SHELL
    sudo apt update -y
    echo "" >> /home/vagrant/.ssh/authorized_keys
    echo "#{public_key}" >> /home/vagrant/.ssh/authorized_keys
  SHELL

end

	4 - Start VM: vagrant up

———————————————————————————————————————————————————————————————————————————————————————

Part D - Test SSH connection between Controller and Host Machines

	ansible -i hosts.vag all -m ping

———————————————————————————————————————————————————————————————————————————————————————

Part E - Create Hosts and Playbook file on Controller Machine

	vi hosts.vag

[servers]
web ansible_host=192.168.33.10
db ansible_host=192.168.33.11

	vi ansible-install-apache-vagrant.yml

---
- name: Install Apache Web Server  # Playbook Name
  hosts: all                       # Target all hosts in the inventory
  become: true                     # Execute tasks with (sudo)
  tasks:                           # List of tasks to execute on the hosts
    - name: Install Apache         # Task to install Apache
      apt:                         # Apt module to manage packages
        name: apache2              # Package name to install
        state: present             # Ensure the package is installed

    - name: Start Apache           # Task to start Apache service
      service:                     # Service module to manage services
        name: apache2              # Specify the service name
        state: started             # Ensure the service is started
        enabled: true              # Ensure the service is enabled at boot

———————————————————————————————————————————————————————————————————————————————————————

Part F - Run playbook on ansible-controller

	1 - SSH to ansible-controller machine
	vagrant ssh

	2 - Run playbook
	ansible-playbook -i hosts playbook.yml (for all hosts)
	ansible-playbook -i hosts -l web playbook.yml (for specific host)

———————————————————————————————————————————————————————————————————————————————————————

Part G - Adding Ansible within Vagrantfile as Provisioner

If Ansible and Vagrant on the same machine, we can use Ansible as a Provisioner in Vagrantfile
config.vm.provision "ansible" do |ansible|
 ansible.playbook = "playbook.yml"